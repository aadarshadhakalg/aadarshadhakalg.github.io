<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title></title>
        <link>undefined</link>
        <description>undefined</description>
        <lastBuildDate>Tue, 06 Aug 2024 08:54:36 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>Joplin Pages Publisher</generator>
        <item>
            <title><![CDATA[Influx DB and Grafana Installation with Docker]]></title>
            <guid>5c0cd5e10ead47c09a645070b1acdb0c</guid>
            <pubDate>Tue, 06 Aug 2024 02:20:12 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="install-docker">Install Docker</h2>
<ol>
<li>Uninstalled previous docker packages if installed</li>
</ol>
<div><pre class="hljs"><code><span class="hljs-keyword">for</span> pkg <span class="hljs-keyword">in</span> docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; <span class="hljs-keyword">do</span> sudo apt-<span class="hljs-built_in">get</span> <span class="hljs-built_in">remove</span> <span class="hljs-variable">$pkg</span>; done</code></pre></div>
<ol start="2">
<li>Setup Docker's <code>apt</code> repository</li>
</ol>
<div><pre class="hljs"><code><span class="hljs-comment"># Add Docker's official GPG key:</span>
sudo apt-get update
sudo apt-get install ca-certificates curl
sudo install -m <span class="hljs-number">0755</span> -d <span class="hljs-regexp">/etc/</span>apt/keyrings
sudo curl -fsSL https:<span class="hljs-regexp">//</span>download.docker.com<span class="hljs-regexp">/linux/u</span>buntu<span class="hljs-regexp">/gpg -o /</span>etc<span class="hljs-regexp">/apt/</span>keyrings/docker.asc
sudo chmod a+r <span class="hljs-regexp">/etc/</span>apt<span class="hljs-regexp">/keyrings/</span>docker.asc

<span class="hljs-comment"># Add the repository to Apt sources:</span>
echo \
  <span class="hljs-string">"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release &amp;&amp; echo "</span><span class="hljs-variable">$VERSION_CODENAME</span><span class="hljs-string">") stable"</span> | \
  sudo tee <span class="hljs-regexp">/etc/</span>apt<span class="hljs-regexp">/sources.list.d/</span>docker.list &gt; <span class="hljs-regexp">/dev/</span>null
sudo apt-get update</code></pre></div>
<ol start="3">
<li>Install Latest Docker Packages</li>
</ol>
<div><pre class="hljs"><code>sudo apt-get install docker-ce docker-ce-<span class="hljs-keyword">cli</span> containerd.io docker-buildx-<span class="hljs-keyword">plugin</span> docker-compose-<span class="hljs-keyword">plugin</span></code></pre></div>
<ol start="4">
<li>Add User to Docker Group</li>
</ol>
<div><pre class="hljs"><code><span class="hljs-attribute">sudo usermod -aG docker your_username</span></code></pre></div>
<h2 id="install-grafana">Install Grafana</h2>
<h3 id="docker-compose">Docker Compose</h3>
<ol>
<li>Create a <code>docker-compose.yml</code> file with this content</li>
</ol>
<div><pre class="hljs"><code><span class="hljs-attribute">version</span><span class="hljs-punctuation">:</span> <span class="hljs-string">'3.8'</span>

<span class="hljs-attribute">services</span><span class="hljs-punctuation">:</span>
  <span class="hljs-attribute">grafana</span><span class="hljs-punctuation">:</span>
    <span class="hljs-attribute">image</span><span class="hljs-punctuation">:</span> <span class="hljs-string">grafana/grafana-oss</span>
    <span class="hljs-attribute">container_name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">grafana</span>
    <span class="hljs-attribute">restart</span><span class="hljs-punctuation">:</span> <span class="hljs-string">unless-stopped</span>
    <span class="hljs-attribute">ports</span><span class="hljs-punctuation">:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">'3000:3000'</span>
    <span class="hljs-attribute">environment</span><span class="hljs-punctuation">:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">GF_SERVER_ROOT_URL=http://grafana.aadarshadhakal.com.np/</span>
    <span class="hljs-attribute">volumes</span><span class="hljs-punctuation">:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">grafana-storage:/var/lib/grafana</span>

<span class="hljs-attribute">volumes</span><span class="hljs-punctuation">:</span>
  <span class="hljs-attribute">grafana-storage</span><span class="hljs-punctuation">:</span> <span class="hljs-string">{}</span></code></pre></div>
<ol start="2">
<li>Run containers<br />
<code>docker compose up -d</code></li>
</ol>
<p>This runs the services defined inside <code>docker-compose.yml</code> file in detached mode.</p>
<h3 id="setup-nginx-reverse-proxy">Setup Nginx Reverse Proxy</h3>
<ol>
<li>
<p>Install Nginx<br />
<code>sudo apt update &amp;&amp; sudo apt install nginx</code></p>
</li>
<li>
<p>Install certbot for SSL certificatr<br />
<code>sudo apt install certbot python3-certbot-nginx</code></p>
</li>
<li>
<p>Create a new nginx web server  <code>/etc/nginx/sites-available/&lt;YOURDOMAIN&gt;</code> with the following content.</p>
</li>
</ol>
<div><pre class="hljs"><code><span class="hljs-section">server</span> {

    <span class="hljs-attribute">server_name</span> &lt;YOURDOMAIN&gt;;

    <span class="hljs-section">location</span> / {
        <span class="hljs-attribute">proxy_set_header</span> Host <span class="hljs-variable">$host</span>;
        <span class="hljs-attribute">proxy_set_header</span> X-Real-IP <span class="hljs-variable">$remote_addr</span>;
        <span class="hljs-attribute">proxy_buffering</span> <span class="hljs-literal">off</span>;
        <span class="hljs-attribute">proxy_pass</span> http://127.0.0.1:3000;
    }
}
</code></pre></div>
<ol start="4">
<li>
<p>Enable the newly created nginx web server<br />
<code>sudo ln -s /etc/nginx/sites-available/&lt;YOURDOMAIN&gt; /etc/nginx/sites-enabled/&lt;YOURDOMAIN&gt;</code></p>
</li>
<li>
<p>Install SSL certificate using Certbot<br />
<code>sudo certbot run -d &lt;YOURDOMAIN&gt; -d www.&lt;YOURDOMAIN&gt;</code></p>
</li>
</ol>
<blockquote>
<p>Default Username and Password is <code>admin</code> and <code>admin</code></p>
</blockquote>
<h2 id="install-influx-db">Install Influx DB</h2>
<ol>
<li>Create a <code>docker-compose.yml</code> file with the following contents</li>
</ol>
<div><pre class="hljs"><code><span class="hljs-attribute">version</span><span class="hljs-punctuation">:</span> <span class="hljs-string">'3.8'</span>

<span class="hljs-attribute">services</span><span class="hljs-punctuation">:</span>
  <span class="hljs-attribute">influxdb2</span><span class="hljs-punctuation">:</span>
    <span class="hljs-attribute">image</span><span class="hljs-punctuation">:</span> <span class="hljs-string">influxdb:2</span>
    <span class="hljs-attribute">restart</span><span class="hljs-punctuation">:</span> <span class="hljs-string">always</span>
    <span class="hljs-attribute">ports</span><span class="hljs-punctuation">:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">8086:8086</span>
    <span class="hljs-attribute">environment</span><span class="hljs-punctuation">:</span>
      <span class="hljs-attribute">DOCKER_INFLUXDB_INIT_MODE</span><span class="hljs-punctuation">:</span> <span class="hljs-string">setup</span>
      <span class="hljs-attribute">DOCKER_INFLUXDB_INIT_USERNAME_FILE</span><span class="hljs-punctuation">:</span> <span class="hljs-string">/run/secrets/influxdb2-admin-username</span>
      <span class="hljs-attribute">DOCKER_INFLUXDB_INIT_PASSWORD_FILE</span><span class="hljs-punctuation">:</span> <span class="hljs-string">/run/secrets/influxdb2-admin-password </span>
      <span class="hljs-attribute">DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE</span><span class="hljs-punctuation">:</span> <span class="hljs-string">/run/secrets/influxdb2-admin-token</span>
      <span class="hljs-attribute">DOCKER_INFLUXDB_INIT_ORG</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&lt;YOUR ORGANIZATIO NAME&gt; </span>
      <span class="hljs-attribute">DOCKER_INFLUXDB_INIT_BUCKET</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&lt;BUCKET NAME&gt;</span>
    <span class="hljs-attribute">secrets</span><span class="hljs-punctuation">:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">influxdb2-admin-username</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">influxdb2-admin-password</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">influxdb2-admin-token</span>
    <span class="hljs-attribute">volumes</span><span class="hljs-punctuation">:</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">type: volume</span>
        <span class="hljs-attribute">source</span><span class="hljs-punctuation">:</span> <span class="hljs-string">influxdb2-data</span>
        <span class="hljs-attribute">target</span><span class="hljs-punctuation">:</span> <span class="hljs-string">/var/lib/influxdb2</span>
      <span class="hljs-bullet">-</span> <span class="hljs-string">type: volume</span>
        <span class="hljs-attribute">source</span><span class="hljs-punctuation">:</span> <span class="hljs-string">influxdb2-config</span>
        <span class="hljs-attribute">target</span><span class="hljs-punctuation">:</span> <span class="hljs-string">/etc/influxdb2</span>
<span class="hljs-attribute">secrets</span><span class="hljs-punctuation">:</span>
  <span class="hljs-attribute">influxdb2-admin-username</span><span class="hljs-punctuation">:</span>
    <span class="hljs-attribute">file</span><span class="hljs-punctuation">:</span> <span class="hljs-string">.env.influxdb2-admin-username</span>
  <span class="hljs-attribute">influxdb2-admin-password</span><span class="hljs-punctuation">:</span>
    <span class="hljs-attribute">file</span><span class="hljs-punctuation">:</span> <span class="hljs-string">.env.influxdb2-admin-password</span>
  <span class="hljs-attribute">influxdb2-admin-token</span><span class="hljs-punctuation">:</span>
    <span class="hljs-attribute">file</span><span class="hljs-punctuation">:</span> <span class="hljs-string">.env.influxdb2-admin-token</span>
<span class="hljs-attribute">volumes</span><span class="hljs-punctuation">:</span>
  <span class="hljs-attribute">influxdb2-data</span><span class="hljs-punctuation">:</span>
  <span class="hljs-attribute">influxdb2-config</span><span class="hljs-punctuation">:</span></code></pre></div>
<ol start="2">
<li>Execute this command from the directory where your <code>docker-compose.yml</code> file is located.</li>
</ol>
<div><pre class="hljs"><code><span class="hljs-keyword">echo</span> <span class="hljs-string">"&lt;USERNAME&gt;"</span> &gt; <span class="hljs-string">.env.influxdb2-admin-username</span>
<span class="hljs-keyword">echo</span> <span class="hljs-string">"&lt;PASSWORD&gt;"</span> &gt; <span class="hljs-string">.env.influxdb2-admin-password</span>
<span class="hljs-keyword">echo</span> <span class="hljs-string">"&lt;TOKEN&gt;"</span> &gt; <span class="hljs-string">.env.influxdb2-admin-token</span></code></pre></div>
<p>*Replace USERNAME, PASSWORD and TOKEN</p>
<ol start="3">
<li>Start services<br />
<code>docker compose up -d</code></li>
</ol>
<h2 id="add-influx-db-as-data-source-in-grafana">Add Influx DB as Data Source in Grafana</h2>
<ol>
<li>Login to grafana dashboard</li>
<li>From the drawer menu go to Data Sources</li>
<li>Click on Add New Data Source button and select InfluxDB</li>
<li>Select <strong>FLUX</strong> as the Query Language</li>
<li>Add InfluxDB server url and port in the URL text field</li>
<li>Enable <strong>Skip TLS Verify</strong></li>
<li>Enter <strong>Organization Name</strong>, <strong>Bucket Name</strong> and <strong>Token</strong> and click Save and Test</li>
</ol>
<blockquote>
<p>To get API token, in InfluxDB dashboard go to Load Data  &gt; API Tokens &gt; Generate API Token or You can use the token provided during InfluxDB installation</p>
</blockquote>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Storage Locked / Cannot Use CEPH pool]]></title>
            <guid>8ef3d8f14d624ec1b2e204410bf573fd</guid>
            <pubDate>Sat, 03 Aug 2024 17:10:18 GMT</pubDate>
            <content:encoded><![CDATA[<p>cThis issue arises when you have a bad CRUSH rule or overall Ceph configuration set.</p>
<p>First of all, check the replication rule in the pool configuration.</p>
<p>In my case, I had set the <code>crush rule</code> or <code>replication</code> to <code>replicated_rule</code>, which by default disperses replicas across different hosts. I was running a single-node cluster, so the total number of hosts was 1. However, my number of replicas was set to 3 and the minimum number of replicas was set to 2. Since there was a single host, and the replication type was set to host, and the minimum replica was set to 2, the configuration failed.</p>
<p>For me, there were two solutions: either decrease the minimum replica to 1 to match the number of hosts, or, since I had two OSDs, change the replication type to OSD.</p>
<p>Both solutions work, but I preferred the second, so I set the replication type to OSD because some amount of redundancy is necessary to keep the data safe.</p>
<h2 id="creating-a-crush-rule">Creating a CRUSH Rule</h2>
<p>There are two types of replication:</p>
<ol>
<li>Across hosts</li>
<li>Across OSDs</li>
</ol>
<p>Step-by-step commands:</p>
<ol>
<li><code>ceph osd tree</code></li>
<li><code>ceph osd crush rule create-replicated replicated_osd default osd</code></li>
<li><code>ceph osd pool set prodpool crush_rule replicated_osd</code></li>
</ol>
<p>If you encounter any issues while using Ceph with Proxmox VE, or if you applied a wrong or bad configuration by mistake and are unable to log in to the Proxmox VE web interface, please fix the Ceph issue first using the command line by logging into an SSH session and then restarting Proxmox system services:</p>
<div><pre class="hljs"><code>systemctl restart pve-cluster.service
systemctl restart pvedaemon.service
systemctl restart pveproxy.service</code></pre></div>
<h3 id="cheatsheet">Cheatsheet</h3>
<ol>
<li>
<p>Dump details of all CRUSH rules:</p>
<div><pre class="hljs"><code>ceph osd crush rule dump</code></pre></div>
</li>
<li>
<p>List all CRUSH rules:</p>
<div><pre class="hljs"><code>ceph osd crush rule ls</code></pre></div>
</li>
<li>
<p>List OSD Tree:</p>
<div><pre class="hljs"><code>ceph osd tree</code></pre></div>
</li>
<li>
<p>Remove a CRUSH rule:</p>
<div><pre class="hljs"><code>ceph osd crush rule rm &lt;name&gt;</code></pre></div>
</li>
<li>
<p>Create a CRUSH rule:</p>
<div><pre class="hljs"><code>ceph osd crush rule create-replicated &lt;rule_name&gt; &lt;crush_tree_root&gt; &lt;<span class="hljs-built_in">type</span>&gt; [&lt;class&gt;]</code></pre></div>
<p>Example:</p>
<div><pre class="hljs"><code>ceph osd crush rule create-replicated replicated_osd default osd</code></pre></div>
</li>
<li>
<p>List all pools:</p>
<div><pre class="hljs"><code>ceph osd pool ls</code></pre></div>
</li>
<li>
<p>Show pool status:</p>
<div><pre class="hljs"><code>ceph osd pool stats</code></pre></div>
</li>
<li>
<p>Set CRUSH rule to the pool:</p>
<div><pre class="hljs"><code>ceph osd pool <span class="hljs-built_in">set</span> &lt;pool_name&gt; crush_rule &lt;crush_rule_name&gt;</code></pre></div>
<p>Example:</p>
<div><pre class="hljs"><code>ceph osd pool <span class="hljs-built_in">set</span> prodpool crush_rule replicated_osd</code></pre></div>
</li>
</ol>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Docker]]></title>
            <guid>6ac61bd07dee479189d41c2ea22c3b18</guid>
            <pubDate>Tue, 14 May 2024 05:52:43 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="docker">Docker</h1>
<h2 id="introduction">Introduction</h2>
<hr />
<h3 id="open-container-initiative">Open Container Initiative</h3>
<ol>
<li>Runtime Specification - How a image is converted to container and run</li>
<li>Image Specification - What configuration in what format a image file should be written</li>
<li>Distribution Specification - How the images should be distributed /shared. Like, container registry, docke hub etc..</li>
</ol>
<h3 id="containers">Containers</h3>
<ul>
<li>Shared Kernel</li>
<li>No dependency conflicts</li>
<li>Isolated</li>
<li>Faster startup and shutdown</li>
<li>Faster provisioning and decommissioning</li>
<li>Lightweight enough to use in development!</li>
</ul>
<h3 id="linux-kernel-internals">Linux Kernel Internals</h3>
<ol>
<li>Name spaces</li>
<li>Cgroups ( Control memory and cpu allocation / priorities )</li>
<li>overlayfs file system</li>
</ol>
<p><strong>Docker Desktop Creates a Linux VM to host docker containers in Windows and Mac OS, for Linux, since it's already a linux host new Linux VM is not created.</strong></p>
<p><strong>In the host system, docker container related files are in <code>/var/lib/docker</code> folder</strong></p>
<p><img src="/_resources/eb2c5dc36ea546dbb94d869aff858f1e.png" /></p>
<h2 id="data-within-containers">Data within Containers</h2>
<ul>
<li>By default all data created or modified in containers is short lived</li>
<li>If some data should be present every time a container image is run (e.g dependency), it should be built into the image itself</li>
<li>if data is generated by the application that needs to be persisted, a <strong>volume</strong> should to store that outside of the ephemeral ( short lived ) container filesystem</li>
<li><strong>bind mount</strong> should be used to persist configuration files, Not recommended for application data</li>
<li>Bind mount can also be used to support hot-reload during development</li>
</ul>
<h2 id="building-container-images">Building Container Images</h2>
<hr />
<h3 id="male-cook-application-recipe">👨‍🍳 Application Recipe:</h3>
<ol>
<li>Start with an Operating System</li>
<li>Install the language runtime</li>
<li>Install any application dependencies</li>
<li>Set up the execution environment</li>
<li>Run the application</li>
</ol>
<h3 id="docker-build-context">Docker Build Context</h3>
<p><img src="/_resources/a5dbc2e93b764feab7c90a6164b665d9.png" /></p>
<h3 id="common-build-commands">Common Build Commands</h3>
<p>FROM: Specifies the base layer or operating system for the container image.<br />
RUN: Executes a command during the build phase.<br />
COPY: Copies files from the build context (e.g., your local system) to the container image.<br />
CMD: Provides a command to be executed when the container starts.</p>
<p><strong>A hash (#) is used for comments. Instructions are written in all caps, followed by arguments.</strong></p>
<h3 id="dockerfile">Dockerfile</h3>
<p>A image spec and configuration file</p>
<h4 id="a-naive-implementation-example">A Naive Implementation example</h4>
<div><pre class="hljs"><code><span class="hljs-keyword">FROM</span> node
<span class="hljs-keyword">COPY</span><span class="language-bash"> . .</span>
<span class="hljs-keyword">RUN</span><span class="language-bash"> npm install</span>
<span class="hljs-keyword">CMD</span><span class="language-bash"> [ <span class="hljs-string">"node"</span>, <span class="hljs-string">"index.js"</span> ]</span></code></pre></div>
<h4 id="improvements">Improvements</h4>
<ol>
<li>Pin the base image to improve security and build time</li>
<li>Set a working directory for clarity</li>
<li>Copy dependencies files before source code and install dependencies. <strong>This will cache dependency installation layer while performing subsequent builds. While copying it with source code and getting dependencies afterwards, changes in source code will cause dependency fetch everytime the image is built. But, source code change doesnot always means the dependencies are also changed</strong></li>
<li>Use a non root user for security</li>
<li>Configure for production environment ( No debugger, no dev dependencies )</li>
<li>Add useful metadata</li>
<li>Use a cache mount to speedup dependency installation ( Buildkit feature )</li>
<li>Use multi-stage build</li>
</ol>
<h4 id="a-good-implementation-example">A good implementation example</h4>
<div><pre class="hljs"><code><span class="hljs-comment">#-------------------------------------------</span>
<span class="hljs-comment"># Name the first stage "base" to reference later</span>
<span class="hljs-keyword">FROM</span> node:19.6-bullseye-slim AS base
<span class="hljs-comment">#-------------------------------------------</span>
LABEL org.opencontainers.image.<span class="hljs-attribute">authors</span>=<span class="hljs-string">"sid@devopsdirective.com"</span>
WORKDIR /usr/src/app
COPY package*.json ./
<span class="hljs-comment">#-------------------------------------------</span>
<span class="hljs-comment"># Use the base stage to create dev image</span>
<span class="hljs-keyword">FROM</span> base AS dev
<span class="hljs-comment">#-------------------------------------------</span>
<span class="hljs-built_in">RUN</span> <span class="hljs-attribute">--mount</span>=type=cache,target=/usr/src/app/.npm \
  npm <span class="hljs-built_in">set</span> cache /usr/src/app/.npm &amp;&amp; \
  npm install
COPY . .
CMD [<span class="hljs-string">"npm"</span>, <span class="hljs-string">"run"</span>, <span class="hljs-string">"dev"</span>]
<span class="hljs-comment">#-------------------------------------------</span>
<span class="hljs-comment"># Use the base stage to create separate production image</span>
<span class="hljs-keyword">FROM</span> base AS production
<span class="hljs-comment">#-------------------------------------------</span>
ENV NODE_ENV production
<span class="hljs-built_in">RUN</span> <span class="hljs-attribute">--mount</span>=type=cache,target=/usr/src/app/.npm \
  npm <span class="hljs-built_in">set</span> cache /usr/src/app/.npm &amp;&amp; \
  npm ci <span class="hljs-attribute">--only</span>=production<span class="hljs-built_in">
USER </span>node
COPY <span class="hljs-attribute">--chown</span>=node:node ./src/ .
EXPOSE 3000
CMD [ <span class="hljs-string">"node"</span>, <span class="hljs-string">"index.js"</span> ]</code></pre></div>
<h2 id="running-docker-container">Running Docker Container</h2>
<hr />
<p>There are two ways to run a docker container</p>
<ol>
<li>Create a docker-compose.yml file and do <code>docker compose up</code></li>
<li>Use <code>docker run</code> command directly</li>
</ol>
<p>We can run multiple containers with docker compose at the same time also it manages container life cycle nicely than the <code>docker run</code> option.</p>
<h3 id="commands-examples">Commands Examples</h3>
<ol>
<li><code>docker run --env POSTGRES_PASSWORD=foorbar --publish 5432:5432 postgres:15.1-alpine</code></li>
<li><code>docker run docker/whalesay cowsay "Hello, World"</code></li>
<li><code>docker run --interactive --tty --rm ubuntu:22.04</code></li>
<li><code>docker start &lt;container-name&gt;</code></li>
<li><code>docker attach &lt;container-name&gt;</code>
<ul>
<li>Attach to the shell of running container</li>
</ul>
</li>
<li><code>docker network ls</code> list all network</li>
<li><code>docker network create my-network</code> creates a my-network docker network</li>
<li><code>docker run --network my-network ubuntu sleep 99</code> Run container in the custom created network</li>
</ol>
<h3 id="most-used-options">Most Used Options</h3>
<ol start="6">
<li><code>-d</code> detach and run in background</li>
<li><code>--entrypoint</code> override entrypoint defined in dockerfile</li>
<li><code>--env, -e, --env-file</code> Set environment variables in runtime</li>
<li><code>--init</code> run docker-init process as main process. If not passed the first command/entrypoint will be process id 1 or main process</li>
<li><code>--interactive --tty</code> or <code>-it</code> We get running shell within that container</li>
<li><code>--rm</code> removes the container automatically after we stop container process</li>
<li><code>--name</code> give container a name, can't have two container with same name in the system</li>
<li><code>--network &lt;name&gt;, --net</code> Assign network to the container</li>
<li><code>--publish 8080:80, -p</code> is used for mapping port from docker container to host. 8080 is the host port and 80 is container port</li>
<li><code>--platform &lt;linux/arm64/v8&gt;</code> Run in different CPU architecture, uses QEMU under the hood</li>
<li><code>--restart unlesss-stopped</code> Restart container if crashed</li>
<li><code>--cpu-shares</code> No of cpu cycles assigned to the container processes</li>
<li><code>--memory, -m</code> Amount of memory assigned to the container processes</li>
<li><code>--pid, --pids-limit</code> No of sub processes the container can create and manage</li>
<li><code>--privileged</code> Ignore all security config and give privileged level permision to container process</li>
<li><code>--read-only</code> Make container process read only</li>
<li><code>--link=db</code> To use <code>db</code>, which points to the db container internal network ip</li>
</ol>
<h3 id="docker-compose">Docker Compose</h3>
<div><pre class="hljs"><code><span class="hljs-string">version:3.9</span>
<span class="hljs-attr">services:</span>
    <span class="hljs-attr">service1:</span>
        <span class="hljs-attr">image:</span> 
        <span class="hljs-attr">build:</span>
            <span class="hljs-attr">context:</span>
            <span class="hljs-attr">dockerfile:</span>
        <span class="hljs-attr">init:</span> <span class="hljs-literal">true</span>
        <span class="hljs-attr">volumes:</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">host_path/volume:container_path</span> <span class="hljs-comment"># Bind mount</span>
            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">bind</span> <span class="hljs-comment"># Another way</span>
                <span class="hljs-attr">source:</span> <span class="hljs-string">path</span>
                <span class="hljs-attr">target:</span> <span class="hljs-string">path</span>
        <span class="hljs-attr">networks:</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">network1</span>
        <span class="hljs-attr">ports:</span>
            <span class="hljs-bullet">-</span> <span class="hljs-number">5173</span><span class="hljs-string">:5173</span>
    
    
    <span class="hljs-attr">service2:</span>
        <span class="hljs-attr">image:</span>
        <span class="hljs-attr">build:</span>
            <span class="hljs-attr">context:</span>
            <span class="hljs-attr">dockerfile:</span>
            <span class="hljs-attr">target:</span> <span class="hljs-string">stagename</span>  <span class="hljs-comment"># Build a specific stage only when using multistage build</span>
        <span class="hljs-attr">init:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># Good for security</span>
        <span class="hljs-attr">depends_on:</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">service1</span> <span class="hljs-comment"># Starts service1 Before starting this</span>
        <span class="hljs-attr">environment:</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">Key=Value</span>
        <span class="hljs-attr">networks:</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">network1</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">network2</span>
        <span class="hljs-attr">ports:</span> 
            <span class="hljs-bullet">-</span> <span class="hljs-number">3000</span><span class="hljs-string">:3000</span>
        <span class="hljs-attr">restart:</span> <span class="hljs-string">unless-stopped</span>
        
    <span class="hljs-attr">service3:</span>
        <span class="hljs-attr">image:</span>
        <span class="hljs-attr">volumes:</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">volume1:container</span> <span class="hljs-string">path</span> <span class="hljs-comment"># Volumes</span>
        <span class="hljs-attr">environment:</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">Key=Value</span>
        <span class="hljs-attr">networks:</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">network2</span>
        <span class="hljs-attr">ports:</span>
            <span class="hljs-bullet">-</span> <span class="hljs-number">5432</span><span class="hljs-string">:5432</span>
            

<span class="hljs-comment"># Create Volumes and Network that are being used</span>

<span class="hljs-attr">volumes:</span>
    <span class="hljs-attr">volume1:</span>
    
<span class="hljs-attr">networks:</span>
    <span class="hljs-attr">network1:</span>
    <span class="hljs-attr">network2:</span></code></pre></div>
<p>By default bridge network is created.</p>
<p>In the above example,</p>
<ul>
<li>
<p><strong>service2 can see both service1 and service3</strong></p>
</li>
<li>
<p><strong>service 1 and service 3 are are not visible to each other</strong></p>
</li>
<li>
<p><code>docker compose up</code> Start all containers and attach to them all</p>
</li>
<li>
<p><code>docker compose up -d</code> Start all container as daemon or detach</p>
</li>
<li>
<p><code>docker compose down</code> Stop all containers</p>
</li>
</ul>
<p><strong>NOTE:</strong> We can use multiple docker-compose.yml file with docker compose up command. In this case, the later file will override the configuration on previous file. So, only the configuration that need to be override can be put into the new docker-compose.yml file.</p>
<h2 id="container-security">Container Security</h2>
<hr />
<h3 id="image-security">Image Security</h3>
<ul>
<li>Use minimal base image ( chainguard.dev )</li>
<li>Scan images <code>docker scout cves image-tag</code></li>
<li>Use users with minimal permissions</li>
<li>Keep sensitive info out of images</li>
<li>Sigh and verify images</li>
<li>Use fixed image tags ( pin major.minor versions )</li>
</ul>
<h3 id="runtime-security">Runtime Security</h3>
<ul>
<li>Start docker daemon with <code>--userns-remap</code></li>
<li>Use <code>--read-only</code> if no write access is required</li>
<li><code>--cap-drop=all</code>, then <code>--cap-add</code> anything you need</li>
<li>Limit CPU's and memory</li>
<li>Use <code>--security-opt</code></li>
</ul>
<h2 id="deploying-to-production">Deploying to Production</h2>
<hr />
<p><strong>COOL CONCEPT:</strong> You can specify the host where docker engine is running to all docker commands applies to that host. It is possible using ssh.</p>
<p>Just do,<br />
<code>export DOCKER_HOST=ssh://user@ip</code><br />
<strong>Remember</strong>: You should setup your SSH key in the server to make this work</p>
<h3 id="things-to-keep-in-mind">Things to keep in mind</h3>
<ol>
<li>Security</li>
<li>Ergonomics / Developer Experience</li>
<li>Scalability</li>
<li>Downtime</li>
<li>Observability</li>
<li>Persistent storage configuration</li>
<li>Cost</li>
</ol>
<h3 id="why-not-use-docker-compose-for-deployment">Why not use Docker Compose for Deployment</h3>
<ol>
<li>No way to deploy without downtime</li>
<li>No way to handle credentials</li>
<li>Can only be used on a single host</li>
</ol>
<h3 id="docker-swarm">Docker Swarm</h3>
<ul>
<li><code>docker swarm init</code> Enable swarm mode in the host</li>
<li><code>docker stack deploy -c docker-swarm.yml stack_name</code> Deploy containers to docker swarm, <strong>docker-swarm.yml</strong> and <strong>docker-compose.yml</strong> are <strong>nearly identical</strong></li>
<li><code>docker stack rm stack_name</code> To remove stack</li>
<li><code>docker service ls</code> To list all container services and information about replicas</li>
<li><code>docker secret create</code> To create secret in the docker host machine</li>
</ul>
<p>In the yml file, add following lines</p>
<div><pre class="hljs"><code><span class="hljs-attr">secrets:</span>
    <span class="hljs-attr">database-url:</span>
        <span class="hljs-attr">external:</span> <span class="hljs-literal">true</span>
    <span class="hljs-attr">postgres-passwd:</span>
        <span class="hljs-attr">external:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># Means we dont havve to pass secret here in compose file, its in docker secret alreadys</span></code></pre></div>
<p>The created secrets will be available to the application through a file. So, application should read the file to get the secret value.</p>
<div><pre class="hljs"><code><span class="hljs-attr">environment:</span>
    <span class="hljs-bullet">-</span> <span class="hljs-string">DATABASE_URL=/run/secrets/database-url</span>
<span class="hljs-attr">secrets:</span>
    <span class="hljs-bullet">-</span> <span class="hljs-string">database-url</span> <span class="hljs-comment"># Tell application that we'll consume it</span></code></pre></div>
<p>We can also add deployment configuration to specify no of replicas, and how the updates should be handled</p>
<div><pre class="hljs"><code><span class="hljs-attr">service:</span>
    <span class="hljs-attr">deploy:</span>
        <span class="hljs-attr">mode:</span> <span class="hljs-string">replicated</span>
        <span class="hljs-attr">replicas:</span> <span class="hljs-number">2</span>
        <span class="hljs-attr">update_config:</span>
            <span class="hljs-attr">order:</span> <span class="hljs-string">start-first</span> <span class="hljs-comment"># start new container before stopping old one</span></code></pre></div>
<p>Adding healthcheck will tell the docker engine that the running container is healthy or not.</p>
<p>While performing updates, the new container won't accept traffic and old containers wont get deleted until the new container status is healthy.</p>
<div><pre class="hljs"><code><span class="hljs-attr">service:</span>
    <span class="hljs-attr">healthcheck:</span>
        <span class="hljs-attr">test:</span> [<span class="hljs-string">"CMD"</span>, <span class="hljs-string">"Put a test command here"</span>]
        <span class="hljs-attr">interval:</span> <span class="hljs-string">30s</span>
        <span class="hljs-attr">timeout:</span> <span class="hljs-string">5s</span>
        <span class="hljs-attr">retries:</span> <span class="hljs-number">3</span> <span class="hljs-comment"># 3 retries before declaring the status unhealthy</span>
        <span class="hljs-attr">start_period:</span> <span class="hljs-string">10s</span> <span class="hljs-comment"># Performs first health check after 10 seconds container starts</span></code></pre></div>
<h2 id="docker-network">Docker Network</h2>
<ul>
<li><code>bridge</code>: The default network driver.</li>
<li><code>host</code>:	Remove network isolation between the container and the Docker host.</li>
<li><code>none</code>	Completely isolate a container from the host and other containers.</li>
<li><code>overlay</code>	Overlay networks connect multiple Docker daemons together.</li>
<li><code>ipvlan</code>	IPvlan networks provide full control over both IPv4 and IPv6 addressing.</li>
<li><code>macvlan</code>	Assign a MAC address to a container.</li>
</ul>
<h2 id="docker-volumes">Docker Volumes</h2>
<p>Volumes are stored in a part of the host filesystem which is managed by Docker (/var/lib/docker/volumes/ on Linux). Non-Docker processes should not modify this part of the filesystem. Volumes are the best way to persist data in Docker.</p>
<p>Bind mounts may be stored anywhere on the host system. They may even be important system files or directories. Non-Docker processes on the Docker host or a Docker container can modify them at any time.</p>
<p>tmpfs mounts are stored in the host system's memory only, and are never written to the host system's filesystem.</p>
<p><img src="/_resources/545018fbfbfe421c86569d216d01e679.png" /></p>
<h2 id="references">References</h2>
<ul>
<li><a title="https://courses.devopsdirective.com/docker-beginner-to-pro/lessons/06-building-container-images/01-what-is-a-dockerfile" href="https://courses.devopsdirective.com/docker-beginner-to-pro/lessons/06-building-container-images/01-what-is-a-dockerfile">https://courses.devopsdirective.com/docker-beginner-to-pro/lessons/06-building-container-images/01-what-is-a-dockerfile</a></li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[ Cloud Performance]]></title>
            <guid>df0a7f0ab95d46d9af593625c068cb24</guid>
            <pubDate>Wed, 24 Jan 2024 05:15:40 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="cloud-performance">Cloud Performance</h1>
<p><strong>Reliability</strong>: Measure of continuous service accomplishment</p>
<p><strong>Exponentially Distributed Lifetime</strong>: Age of module doesnot affect probability of failure</p>
<h2 id="metrics">Metrics</h2>
<h3 id="mttf-mean-time-to-failure">MTTF - Mean Time to Failure</h3>
<h3 id="fit-failure-in-time">FIT - Failure in Time</h3>
<pre><code>Measured in billion hours
</code></pre>
<h3 id="mttr-mean-time-to-repair">MTTR - Mean Time to repair</h3>
<h3 id="mtbf-mean-time-between-failure">MTBF - Mean Time between Failure</h3>
<p><strong>Failure Rate (lambda)</strong>: Fraction of sample that fail per unit time.<br />
Overall failure rate is sum of failure rate of all modules</p>
<div><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.2500em" columnalign="right"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>λ</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mi>M</mi><mi>T</mi><mi>T</mi><mi>F</mi></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
\lambda = \frac{1}{MTTF}
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.30744em;vertical-align:-0.90372em"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4037200000000003em"><span style="top:-3.4037200000000003em"><span class="pstrut" style="height:3.32144em"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em"><span style="top:-2.314em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em">MTTF</span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.90372em"><span></span></span></span></span></span></span></span></span></span></span></span></div>
<p><strong>Availability</strong> is probability of system operational</p>
<div><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.2500em" columnalign="right"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>A</mi><mi>v</mi><mi>a</mi><mi>i</mi><mi>l</mi><mi>a</mi><mi>b</mi><mi>i</mi><mi>l</mi><mi>i</mi><mi>t</mi><mi>y</mi><mo>=</mo><mfrac><mrow><mi>M</mi><mi>T</mi><mi>T</mi><mi>F</mi></mrow><mrow><mi>M</mi><mi>T</mi><mi>B</mi><mi>F</mi></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
\\
Availability =  \frac{MTTF}{MTBF} 
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.84633em;vertical-align:-1.673165em"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.173165em"><span style="top:-4.693495em"><span class="pstrut" style="height:3.3603300000000003em"></span><span class="mord"></span></span><span style="top:-2.6731650000000005em"><span class="pstrut" style="height:3.3603300000000003em"></span><span class="mord"><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.03588em">v</span><span class="mord mathnormal">ai</span><span class="mord mathnormal" style="margin-right:0.01968em">l</span><span class="mord mathnormal">abi</span><span class="mord mathnormal" style="margin-right:0.01968em">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em">y</span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em"><span style="top:-2.314em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em">MTBF</span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em">MTTF</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.673165em"><span></span></span></span></span></span></span></span></span></span></span></span></div>
<div><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.2500em" columnalign="right"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>Reliability </mtext><mo>=</mo><msup><mi>e</mi><mrow><mi>λ</mi><mi>t</mi></mrow></msup><mspace width="1em"></mspace><mtext>t = time</mtext></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
\\
\text{Reliability } = e^{\lambda t} \quad
\text{t = time}
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.059108em;vertical-align:-1.279554em"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.779554em"><span style="top:-3.9395540000000002em"><span class="pstrut" style="height:3em"></span><span class="mord"></span></span><span style="top:-2.380446em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord text"><span class="mord">Reliability </span></span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em"><span style="top:-3.113em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">λ</span><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em"></span><span class="mord text"><span class="mord">t = time</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.279554em"><span></span></span></span></span></span></span></span></span></span></span></span></div>
<h2 id="bathtub-curve">Bathtub Curve</h2>
<p><img src="/_resources/502a0f89df03494f9ec17372cad29cd0.png" /></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Cloud Security]]></title>
            <guid>f24a10d0859747e2bccc9c974e73c0ac</guid>
            <pubDate>Wed, 24 Jan 2024 05:15:27 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="5-cloud-security">5. Cloud Security</h1>
<ul>
<li>"You can outsource responsibility but you cannot outsource accountability".</li>
<li>Expected loss from single breach can be significantly larger</li>
</ul>
<p><strong>Cloud is Better If</strong>:<br />
- Cloud provides better security then yours<br />
- Cloud providers security and your aim matches<br />
- The web service interface do not introduce many vulnerability</p>
<h2 id="issues">Issues</h2>
<ol>
<li>Privacy</li>
<li>Security</li>
<li>Compliance</li>
<li>Legal</li>
</ol>
<h3 id="privacy-and-security">Privacy and Security</h3>
<ul>
<li>Data Protection</li>
<li>Physical Control</li>
<li>Identity Management</li>
<li>Physical and Personnal Security</li>
<li>Availability</li>
<li>Application Security</li>
<li>Privacy ( Encrypted, Credit Cards Masked, Anyonomised )</li>
<li>Legal Issues
<ul>
<li>Providers and customers must consider legal issues, such as Contracts and E-Discovery, and the related laws, which may vary by country</li>
</ul>
</li>
</ul>
<h3 id="compliance">Compliance</h3>
<ul>
<li>Payment Card Industry Data Security Standard (PCI DSS)</li>
<li>Health Insurance Portability and Accountability Act (HIPAA)</li>
<li>Sarbanes-Oxley Act</li>
</ul>
<p>Many of these require regular reporting and audit trials.</p>
<ul>
<li>Business continuity and data recovery</li>
<li>Logs and Audit Trials</li>
<li>Unique Compliance Requirements - data jurisdiction</li>
<li>Legal and Contractual Issues</li>
<li>Public Records</li>
</ul>
<h2 id="level-of-control">Level of Control</h2>
<p><img src="/_resources/ae2921bc024d42a781a4535ac58081c7.png" /></p>
<h2 id="companys-fear">Company's Fear</h2>
<ol>
<li>Security</li>
<li>Performance</li>
<li>Availability</li>
<li>Hard to integrate</li>
<li>Customizability</li>
<li>Costs More</li>
<li>Bringing Back in House</li>
<li>Regulatory requirements</li>
<li>Not enough major suppliers</li>
</ol>
<table>
<thead>
<tr>
<th>Loss of Control</th>
<th>Lack of Trust</th>
<th>Multi Tenancy</th>
</tr>
</thead>
<tbody>
<tr>
<td>- Data Application, Resources are located with provider <br class="jop-noMdConv" /> - User Identity management is handled by provider <br class="jop-noMdConv" /> - Control rules, security policies are managed and enforced by provider</td>
<td><strong>More Trust = More Risk</strong> <br class="jop-noMdConv" /></td>
<td>- Tenants share resources and have opposing goals <br class="jop-noMdConv" /> - Separation between tenents is difficult <br class="jop-noMdConv" /> - Independent user share same physical resources</td>
</tr>
</tbody>
</table>
<h2 id="taxonomy-of-fear">Taxonomy of Fear</h2>
<ol>
<li>Confidentiality ( Leak or Peak )</li>
<li>Integrity ( Tempering )</li>
<li>Availability ( Scalability, Provider's Lifetime, DDoS )</li>
<li>Privacy - Data Mining over client's data</li>
<li>Increased Attack Surface</li>
<li>Auditability and Forensics ( No Local Data )</li>
<li>Legal Dilemma  ( Who should comply with regulations )</li>
</ol>
<h2 id="threat-model">Threat Model</h2>
<ol>
<li>Identify Attackers, Assets, Threats and Other Components</li>
<li>Rank the threats</li>
<li>Choose mitigation strategies</li>
<li>Build Solutions Based on Strategies</li>
</ol>
<h3 id="attackers">Attackers</h3>
<ul>
<li>Malicious Insiders ( Ignored, so more vulnerable ) or Outsider</li>
<li>Single vs Collaborator</li>
<li>Their Goals</li>
<li>Vulnerability and Threats</li>
</ul>
<h4 id="malicious-insiders">Malicious Insiders</h4>
<table>
<thead>
<tr>
<th>At Client</th>
<th>At Cloud Provider</th>
</tr>
</thead>
<tbody>
<tr>
<td>Learn Password or Authentication Information</td>
<td>Log Client Communication</td>
</tr>
<tr>
<td>Gain control over VM</td>
<td>Can read unencrypted data</td>
</tr>
<tr>
<td></td>
<td>Peek or make copies of VM</td>
</tr>
<tr>
<td></td>
<td>Monitor network communication / Application patterns to gain information about clients data, behaviour or sell them</td>
</tr>
</tbody>
</table>
<h4 id="outsider">Outsider</h4>
<table>
<thead>
<tr>
<th>What</th>
<th>Goal</th>
</tr>
</thead>
<tbody>
<tr>
<td>Passive: Listen to network</td>
<td>Intrusion</td>
</tr>
<tr>
<td>Active: Insert malicious traffic</td>
<td>Network Analysis</td>
</tr>
<tr>
<td>Active: Probe cloud structure</td>
<td>Man in the middle</td>
</tr>
<tr>
<td>Launch DoS</td>
<td>Cartography (Mapping)</td>
</tr>
</tbody>
</table>
<h2 id="data-security-and-storage">Data Security and Storage</h2>
<ul>
<li>Data in Storage</li>
<li>Data in Transit</li>
<li>Data in Processing</li>
<li>Data lienage
<ul>
<li>Knowing where and when data was located w/i cloud is important for audit/compliance</li>
</ul>
</li>
<li>Data Provenance
<ul>
<li>Computational Accuracy</li>
</ul>
</li>
<li>Data remanence
<ul>
<li>Inadvertant disclosure of sensative information</li>
</ul>
</li>
</ul>
<h2 id="privacy">Privacy</h2>
<p>Varies from country to country, shaped by public expectations</p>
<ul>
<li>Storage</li>
<li>Retention</li>
<li>Destruction</li>
<li>Auditing, Monitoring, Risk management</li>
<li>Privacy breaches</li>
<li>Who is responsible for protecting privacy</li>
</ul>
<h2 id="solutions">Solutions</h2>
<h3 id="third-party-cloud-computing">Third Party Cloud Computing</h3>
<ul>
<li>Can one determinine VM location</li>
<li>Can one co locate another vm</li>
<li>can on launch side channel attacks from same location</li>
<li>Can one leak VM information once co located</li>
</ul>
<p><strong>Yes To All</strong></p>
<h3 id="minimize-lack-of-trust">Minimize Lack of Trust</h3>
<ol>
<li><strong>Policy Language</strong> (SLA's) - Machine Understandable, Processable, Easy to Combine, Merge , Compare</li>
<li><strong>Certification</strong>
<ul>
<li>Risk assessment by certified third party</li>
</ul>
</li>
</ol>
<h3 id="minimize-loss-of-control">Minimize Loss of Control</h3>
<h4 id="monitoring">Monitoring</h4>
<ol>
<li>Application specific runtime monitoring  and management
<ul>
<li>Gives situational awareness to consumer</li>
<li>Fast recovery from failure, prevent failure</li>
</ul>
</li>
<li>Enable Consumer and Provider to act on attacks he can handle
<ol>
<li>For Provider
<ul>
<li>Intrastructure Re mapping</li>
<li>Repairs</li>
<li>Sutting down offending components or targets</li>
<li>Assisting tenants with porting</li>
</ul>
</li>
<li>For Consumer
<ul>
<li>Application level monitoring</li>
<li>RADAC ( Risk Adaptable Access Control )</li>
<li>VM poting with remote assestation of target physical host</li>
<li>Provide ability to move user's application to another cloud</li>
<li></li>
</ul>
</li>
</ol>
</li>
</ol>
<h4 id="use-muliple-clouds">Use Muliple Clouds</h4>
<p>Don't put all you eggs in one basket</p>
<h4 id="access-control">Access Control</h4>
<p>Consumer Managed Access Control - Control Policies in Customers Hand<br />
<img src="/_resources/9e0c81ed79f948e9b2e7c5eca6cb82c2.png" /></p>
<p><strong>Identity Management or SSO</strong></p>
<ul>
<li>Provide only the required imformation to the requester</li>
<li>Store information in cloud, Azure Active Directory</li>
</ul>
<h3 id="minimize-multi-tenancy">Minimize Multi Tenancy</h3>
<ul>
<li>Choose tenants carefully</li>
<li>VPC</li>
<li>Strong Separation of resources</li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Cloud Technologies]]></title>
            <guid>57b4a23f709943928863305541d432f9</guid>
            <pubDate>Wed, 24 Jan 2024 05:14:31 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="4-cloud-technologies">4. Cloud Technologies</h1>
<h2 id="virtualization">Virtualization</h2>
<p>Virtualization is a software technology that makes the splliting or accumulation of resources possible to enable multiple isolated virtual machines to run in  a single hardware.</p>
<ul>
<li>Split Ram</li>
<li>Unify Memory
<ul>
<li>Example: Use sdcard as internal memory option</li>
<li>Divide space in blocks</li>
<li>LUN - Logical Unit Number</li>
</ul>
</li>
</ul>
<h3 id="hyperviser">Hyperviser</h3>
<p>A Hyperviser is a firmware or a low level program that acts as Virtual Machine Manager.</p>
<p>There are two types of Hyperviser:</p>
<h4 id="type-1-bare-metal-hypervisor">Type 1: Bare Metal Hypervisor</h4>
<pre><code>- Does not need OS to run on
- Has direct access to hardware resources
- A firmware, that abstracts the CPU, RAM, Storage and other resources from physical host to other virtual machines.
- ESXI, KVM, LynxSecure
</code></pre>
<h4 id="type-2-software-hypervisor">Type 2: Software Hypervisor</h4>
<pre><code>- Hosted Hypervisor
- does not have direct access to hardware resources
- Need host OS to run
- A software, that emulates hardware
- VM Ware, Oracle Virtual Box, Microsoft Virtual PC
</code></pre>
<h3 id="protection-rings">Protection Rings</h3>
<p>There are 4 Levels of protection rings,</p>
<p><img src="/_resources/20dc15eec4d14182a74be034de9e9a3c.png" /></p>
<h3 id="types-of-virtualization">Types of Virtualization</h3>
<h4 id="full-virtualization">Full Virtualization</h4>
<ul>
<li>Underlying Hardware is completely simulated</li>
<li>Uses binary translations</li>
<li>Hypervisor siting in <strong>Ring 0</strong> translates the system calls in real time and stores the result for future</li>
<li>Slower due to system call translations</li>
<li>Guest OS does not need changes</li>
<li>Guest OS is not aware of virtualization</li>
</ul>
<p><strong>Emulation</strong> is also a type fo Full Virtualization but it is fully software. Software emulates the hardware.</p>
<p><img src="/_resources/72c14accff97494dbb49069e7139e922.png" /></p>
<h4 id="para-virtualization">Para Virtualization</h4>
<ul>
<li>Underlying Hardware is not completely simulates</li>
<li>Guest os runs in their own isolated domains</li>
<li>Non Virtualizable system calls are written as HyperCalls ( To Hypervisor )</li>
<li>Faster, no need of translations</li>
<li>Guest OS needs changes</li>
<li>Guest OS is aware of Virtualization</li>
</ul>
<h2 id="uddi">UDDI</h2>
<p>UDDI stands for Universal Description, Discovery, and Integration. It is an open industry standard that defines a framework for businesses to publish and discover services on the internet.</p>
<p><img src="/_resources/3b74a3d06dcf41d3831131b48a8e6f0c.png" /></p>
<h2 id="service-oriented-architecture">Service Oriented Architecture</h2>
<p>SOA represents a model in which functionality is decomposed into distinct units (services), which can be distributed over a network and can be combined together and reused to create business applications.</p>
<ul>
<li>Loosely Coupled</li>
<li>Features as Services or Sub System</li>
<li>Central Message Queue i.e Rabbit MQ, Apache Kafka</li>
<li>Technology Independent</li>
<li>Makes use of web services</li>
</ul>
<p><img src="/_resources/bcf45077ebef4036a881ba8c7192109b.png" /></p>
<h3 id="web-services">Web Services</h3>
<p>A web service has an interface, which hides the implementation details so that it can be used independently of the hardware or software platform on which it is implemented, and independently of the programming language in which it is written.</p>
<p>There are many web service specifications created by many standardisation organizations (i.e. World Wide Web Consortium - <strong>W3C</strong>, Web Services Interoperability Organization - <strong>WSI</strong>, <strong>OASIS</strong> ) which is collectively known as <strong>WS-*</strong></p>
<p><strong>WS-*</strong> refers to a set of web service specifications for enhancing interoperability. Notable standards include:</p>
<ol>
<li><strong>WS-Security:</strong> Ensures confidentiality, integrity, and authentication in web service messages.</li>
<li><strong>WS-ReliableMessaging:</strong> Provides a protocol for reliable and ordered message delivery in web services.</li>
<li><strong>WS-AtomicTransaction:</strong> Coordinates distributed transactions for multiple operations across different services.</li>
<li><strong>WS-Coordination:</strong> Offers a framework for coordinating activities and transactions in a distributed system.</li>
<li><strong>WS-BPEL (Web Services Business Process Execution Language):</strong> Defines the orchestration of web services for automating business processes.</li>
<li><strong>WS-CDL (Web Services Choreography Description Language):</strong> Describes the global behavior of cooperating web services, focusing on choreography without a central orchestrator.</li>
</ol>
<p>Web Service Description Language: SOAP and REST</p>
<h2 id="quality-attributes">Quality Attributes</h2>
<ol>
<li>Performance
<ol>
<li>Response</li>
<li>Latency</li>
<li>Data Loss</li>
</ol>
</li>
<li>Availability
<ol>
<li>Hardware Issues</li>
</ol>
</li>
<li>Usability
<ol>
<li>Compliance</li>
<li>Operability</li>
</ol>
</li>
<li>Security
<ol>
<li>User Authentication</li>
</ol>
</li>
<li>Adaptability
<ol>
<li>More Users</li>
</ol>
</li>
</ol>
<h2 id="how-architecture-is-designed">How Architecture is Designed</h2>
<p><img src="/_resources/7a61f3234ae740a29da80fc16bdc14c3.png" /></p>
<h2 id="soa-and-cloud-computing-overlap">SOA and Cloud Computing Overlap</h2>
<p><img src="/_resources/3b4992c56ba64bc083c60c8f9265a63f.png" /></p>
<h2 id="distributed-systems">Distributed Systems</h2>
<p><img src="/_resources/28e24929f1544f5b9d1af1466b1adf5d.png" /></p>
<p>Distributed Computing</p>
<ul>
<li>Heterogeneous Individual Computer</li>
<li>Computers with less processing power</li>
<li>To solve a common problem</li>
<li>Limited , traditional</li>
<li>Subset of grid</li>
<li>Pooling</li>
</ul>
<p>Grid Computing</p>
<ul>
<li>Heterogeneous Every Computer ( Whole Network, Enterprise, Organizations etc )</li>
<li>Can be of any processing power</li>
<li>For everything, any can use it at any time</li>
<li>More OPEN</li>
<li>Optimal Pooling and Distribution</li>
<li>No need to worry about where data goes, where processing happens, so secure and it just works</li>
<li>Standarisation over traditional distributed computing</li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Cloud Deployment Technology]]></title>
            <guid>b9e1ea4bfa66423bb7d607ea025b6146</guid>
            <pubDate>Wed, 24 Jan 2024 05:14:07 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="3-cloud-deployment-technology">3. Cloud Deployment Technology</h1>
<table>
<thead>
<tr>
<th><strong>Aspect</strong></th>
<th><strong>Public Cloud</strong></th>
<th><strong>Private Cloud</strong></th>
<th><strong>Hybrid Cloud</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Ownership</strong></td>
<td>Third-party operated.</td>
<td>Single organization.</td>
<td>Mix of public and private.</td>
</tr>
<tr>
<td><strong>Accessibility</strong></td>
<td>Internet-based.</td>
<td>Intranet-based.</td>
<td>Combines internet and private.</td>
</tr>
<tr>
<td><strong>Resource Sharing</strong></td>
<td>Shared among multiple users.</td>
<td>Dedicated to one organization.</td>
<td>Mix of shared and dedicated.</td>
</tr>
<tr>
<td><strong>Scalability</strong></td>
<td>Highly scalable on demand.</td>
<td>Scalability depends on setup.</td>
<td>Scales with mix of resources.</td>
</tr>
<tr>
<td><strong>Customization/Control</strong></td>
<td>Limited control over infrastructure.</td>
<td>Full control over infrastructure.</td>
<td>Varies based on deployment model.</td>
</tr>
<tr>
<td><strong>Security</strong></td>
<td>Provider-managed security.</td>
<td>Direct organization control.</td>
<td>Requires careful planning.</td>
</tr>
<tr>
<td><strong>Cost Model</strong></td>
<td>Pay-as-you-go or subscription.</td>
<td>Capital expenditure model.</td>
<td>Variable cost with mix.</td>
</tr>
<tr>
<td><strong>Use Cases</strong></td>
<td>Scalable apps, development, public services.</td>
<td>Sensitive data, compliance.</td>
<td>Diverse workloads mix.</td>
</tr>
<tr>
<td><strong>Examples</strong></td>
<td>AWS, Azure, Google Cloud.</td>
<td>On-premises, private providers.</td>
<td>Combines public and private.</td>
</tr>
<tr>
<td><strong>Flexibility</strong></td>
<td>Flexible resource provisioning.</td>
<td>Tailored to specific needs.</td>
<td>Flexibility in resource use.</td>
</tr>
</tbody>
</table>
<h2 id="community-cloud-available-for-multiple-organizations-belonging-to-the-same-community-health-related">Community Cloud: Available for multiple organizations belonging to the same community - Health Related</h2>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Cloud Service Delivery Model]]></title>
            <guid>5829dbd2f84649dbbf0dafc80f4e3194</guid>
            <pubDate>Wed, 24 Jan 2024 05:13:46 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="2-cloud-service-delivery-model">2. Cloud Service Delivery Model</h1>
<p>Cloud service delivery models refer to the ways in which cloud computing services are provided to users.</p>
<ol>
<li>
<p><strong>Infrastructure as a Service (IaaS):</strong></p>
<ul>
<li>IaaS provides virtualized computing resources over the internet. It includes virtual machines, storage, and networking.</li>
<li>Users have control over the infrastructure components, such as operating systems and applications, while the cloud provider manages the physical hardware.</li>
<li><strong>Features:</strong>
<ul>
<li>On-demand resources.</li>
<li>Scalability and flexibility.</li>
<li>Self-service provisioning.</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>Platform as a Service (PaaS):</strong></p>
<ul>
<li>PaaS offers a platform allowing users to develop, run, and manage applications without dealing with the complexity of infrastructure.</li>
<li>Users focus on application development, and the provider handles the underlying infrastructure and runtime environment.</li>
<li><strong>Features:</strong>
<ul>
<li>Development frameworks and tools.</li>
<li>Automated deployment and scaling.</li>
<li>Database and middleware services</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>Software as a Service (SaaS):</strong></p>
<ul>
<li>SaaS delivers software applications over the internet on a subscription basis, eliminating the need for users to install, maintain, and update software locally.</li>
<li>Users access applications through a web browser, and the provider manages everything, including maintenance and updates.</li>
<li><strong>Features:</strong>
<ul>
<li>Accessibility from anywhere with an internet connection.</li>
<li>Automatic updates and patches.</li>
<li>Multi-tenancy for shared resources.</li>
</ul>
</li>
</ul>
</li>
</ol>
<h2 id="differences-between-different-cloud-service-delivery-model">Differences Between Different Cloud Service Delivery Model</h2>
<table>
<thead>
<tr>
<th><strong>Aspect</strong></th>
<th><strong>IaaS</strong></th>
<th><strong>PaaS</strong></th>
<th><strong>SaaS</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Control</strong></td>
<td>Users have control over infrastructure components (OS, applications).</td>
<td>Users focus on application development; provider manages infrastructure.</td>
<td>Provider manages everything, including infrastructure.</td>
</tr>
<tr>
<td><strong>Responsibility</strong></td>
<td>Users manage applications, data, runtime, middleware, OS.</td>
<td>Users manage applications and data; provider manages the rest.</td>
<td>Provider manages everything (applications, infrastructure).</td>
</tr>
<tr>
<td><strong>Flexibility</strong></td>
<td>Highest flexibility</td>
<td>Moderate flexibility</td>
<td>Least flexibility</td>
</tr>
<tr>
<td><strong>Scalability</strong></td>
<td>Easily scalable</td>
<td>Scalability handled by provider</td>
<td>Availability ensured by provider</td>
</tr>
<tr>
<td><strong>Maintenance</strong></td>
<td>Users are responsible for maintaining and updating components.</td>
<td>Provider handles infrastructure maintenance; users manage applications.</td>
<td>Provider handles all maintenance and updates.</td>
</tr>
<tr>
<td><strong>Deployment Speed</strong></td>
<td>Quick provisioning of VM and Resources.</td>
<td>Rapid deployment with pre-built tools and services.</td>
<td>Instant access</td>
</tr>
<tr>
<td><strong>Application Development</strong></td>
<td>Hard - should handle all aspects</td>
<td>Easy - Just follow the framework</td>
<td>No need</td>
</tr>
<tr>
<td><strong>Examples</strong></td>
<td>Amazon Web Services (AWS), Microsoft Azure, Google Cloud.</td>
<td>Heroku, Google App Engine, Microsoft Azure App Services.</td>
<td>Salesforce, Google Workspace, Microsoft 365.</td>
</tr>
</tbody>
</table>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Introduction to Cloud Computing]]></title>
            <guid>98da3ade22984aa28dd304102b4b674b</guid>
            <pubDate>Wed, 24 Jan 2024 05:13:24 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="1-introduction">1. Introduction</h1>
<p><em>Definition</em><br />
<strong>Computing as a Utility</strong><br />
National Institute of Standard and Technology (NIST): Cloud computing is a mode for enabling convenient, on demand access to computing resources ( i.e Network, Server, Storage, Applications, Services ) that can be rapidly provisioned and released with minimal management effort or service provider interaction.</p>
<h2 id="evolution-of-cloud-computing">Evolution of Cloud Computing</h2>
<blockquote>
<p>Computation may someday be organized as a public utility<br />
<strong>- John McCarthy, 1960</strong></p>
</blockquote>
<p>Amazon realized:</p>
<ul>
<li>They were using just 10% of their computing resources</li>
<li>40,000 plus servers</li>
<li>$ 220 Million yearly</li>
</ul>
<p><img src="/_resources/66190c8dd9ec4febad30872e1d07dc3d.png" /></p>
<h2 id="features-of-cloud-computing">Features of Cloud Computing</h2>
<ol>
<li>On demand self service</li>
<li>Broad network access</li>
<li>Resource Pooling</li>
<li>Rapid elasticity</li>
<li>Measured Service</li>
<li>Multi Tenancy</li>
<li>High Availability</li>
<li>Disaster Recovery</li>
</ol>
<h2 id="types-of-cloud">Types of Cloud</h2>
<ul>
<li>You own nothing, just renting</li>
<li>Cloud provider guarantees a level of performance and RAM</li>
<li>Identical to a real machine</li>
</ul>
<h3 id="infrastructure-as-a-service">Infrastructure as a Service</h3>
<h3 id="platform-as-a-service">Platform as a Service</h3>
<h3 id="software-as-a-service">Software as a Service</h3>
<h2 id="problems-of-cloud-computing">Problems of Cloud Computing</h2>
<ul>
<li>Security and Privacy Concerns</li>
<li>Lack of Control</li>
<li>Compliance Issues</li>
<li>Dependence on Internet Connectivity</li>
<li>Vendor Lock In</li>
<li>Limited Customization</li>
<li>Compatibility Issues</li>
<li>Cost</li>
</ul>
]]></content:encoded>
        </item>
    </channel>
</rss>